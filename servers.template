Description: >
    Abid Malik - Udacity Cloud DevOps Engineer Nanodegree program
# Parameters section    
Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resources
    Type: String
# Resources Section
Resources:
  # Security Group for the Load Balancer #
  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: PROD-LB-SecGroup 
      GroupDescription: Allow HTTP protocol on port 80 to Load Balancer
      VpcId:
       Fn::ImportValue: "PROD-VPC"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
       - Key: Name
         Value:  PROD-LB-SecGroup
  # Security Group for the EC2 instances #       
  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: PROD-WebServer-SecGroup 
      GroupDescription: Allow HTTP & SSH from within VPC only  
      VpcId:
       Fn::ImportValue: "PROD-VPC"
      SecurityGroupIngress:
       - IpProtocol: tcp
         FromPort: 80
         ToPort: 80
         CidrIp: 10.0.0.0/16
       - IpProtocol: tcp
         FromPort: 22
         ToPort: 22
         CidrIp: 10.0.0.0/16  
      SecurityGroupEgress:
       - IpProtocol: tcp
         FromPort: 0
         ToPort: 65535
         CidrIp: 0.0.0.0/0
      Tags:
       - Key: Name
         Value: PROD-WebServer-SecGroup
  # Launch Configuration #       
  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: false
      IamInstanceProfile: arn:aws:iam::097663763148:instance-profile/RoleForEC2
      # The home grown image that already have HTTPD installed on it
      ImageId: ami-0be42816e95d0882b
      IamInstanceProfile:
       Ref: iamInstanceProfile
      EbsOptimized: false
      InstanceMonitoring: false
      InstanceType: t2.medium
      KeyName: udacity-key
      SecurityGroups:
        - Ref: WebServerSecGroup
      UserData:
        Fn::Base64: !Sub |
           #!/bin/bash -xe
           sudo usermod -a -G apache ec2-user
           sudo chown -R ec2-user:apache /var/www/html
           cd /var/www/html
           sudo aws s3 cp s3://udacity-cloud-devops-nanodegree/udacity.zip .
           sudo unzip udacity.zip
           sudo rm -f udacity.zip
  # instance Profile
  iamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles: ["RoleForEC2"] 
  # Auto Scaling Group #         
  WebAppScaleGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
       - Fn::ImportValue: "PrivateSubnets"
      LaunchConfigurationName:
        Ref:  WebAppLaunchConfig
      MaxSize: 5
      MinSize: 2
      TargetGroupARNs:
      - Ref: WebAppTargetGroup
      Tags:
        - Key: Name
          Value: PROD-webserver 
          PropagateAtLaunch: True
  # Target Group #               
  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 3
      VpcId: 
        Fn::ImportValue:
          Fn::Sub: "PROD-VPC"
  # Load Balancer        
  WebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      SecurityGroups:
        - Ref: LBSecGroup
      Subnets:
        - Fn::ImportValue: PROD-Public-SubnetA
        - Fn::ImportValue: PROD-Public-SubnetB
  # Listener      
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: WebAppTargetGroup
      LoadBalancerArn:
        Ref: WebAppLB
      Port: '80'
      Protocol: HTTP
  ALBListenerRule:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
        Actions:
        - Type: forward
          TargetGroupArn:
           Ref: WebAppTargetGroup
        Conditions:
        - Field: path-pattern
          Values: [/]
        ListenerArn:
         Ref: Listener
        Priority: 1                  
####### OUTPUT SECTION #####
Outputs:
  LBDNSName:
    Description: "DNS name for the Load Balancer"
    Value: 
      Fn::GetAtt: [WebAppLB, DNSName]
